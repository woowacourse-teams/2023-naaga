<?xml version="1.0" encoding="UTF-8"?>
<configuration>
  <property name="LOGS_ABSOLUTE_PATH" value="./logs"/>

  <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
    <layout class="ch.qos.logback.classic.PatternLayout">
      <Pattern>[%d{yyyy-MM-dd HH:mm:ss}:%-3relative][%thread] %-5level %logger{36} - %msg%n</Pattern>
    </layout>
  </appender>


  <appender name="INFO_LOG"
    class="ch.qos.logback.core.rolling.RollingFileAppender"> <!-- 시간기반 로그 롤링 정책. 시간에 따라 새로 로그 파일을 생성해서 저장한다 -->

    <file>${LOGS_ABSOLUTE_PATH}/info.log</file>
    <filter class="ch.qos.logback.classic.filter.LevelFilter">
      <level>INFO</level>
      <onMatch>ACCEPT</onMatch> <!-- 해당 레벨만 기록한다. -->
      <onMismatch>DENY</onMismatch> <!-- 다른 수준의 레벨은 기록하지 않는다.(상위 레벨도 기록 안함), 상위 수준의 레벨에 대한 기록을 원하면 ACCEPT 로 하면 기록된다. -->
    </filter> <!-- 레벨별 필터링이 필요없을 경우 filter class 관련된 부분을 삭제하면 됨-->
    <encoder>가
      <pattern>[%d{yyyy-MM-dd HH:mm:ss}:%-3relative][%thread] %-5level %logger{35} - %msg%n</pattern>
      <!-- 해당 패턴 네이밍으로 현재 로그가 기록됨
      Todo : 로그 이벤트가 발생한 클래스의 이름을 최대 35자 까지 출력?-->
    </encoder>
    <rollingPolicy
      class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy"> <!-- 시간 기반 로그 롤링 정책. 시간이 지남에 따라 로그 파일을 새로 생성하여 저장한다.-->
      <fileNamePattern>${LOGS_ABSOLUTE_PATH}/old-logs/info.%d{yyyy-MM-dd}.%i.log.gz
      </fileNamePattern> <!-- 로그파일이 저장될 디렉토리 , 해당 이름 패턴으로 롤링된 이전 파일이 기록됨 -->
      <timeBasedFileNamingAndTriggeringPolicy
        class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"><!-- 로그 파일 네이밍 및 트리거링 정책을 설정합니다. SizeAndTimeBasedFNATP 클래스는 시간과 파일 크기 기반으로 롤링을 수행하는 정책.-->
        <maxFileSize>100MB</maxFileSize> <!-- 한 파일의 최대 용량  100MB가 넘어가면 새로운 파일을 생성하여 로그를 기록합니다.-->
      </timeBasedFileNamingAndTriggeringPolicy>
      <maxHistory>180</maxHistory> <!-- 한 파일의 최대 저장 기한 -->
    </rollingPolicy>
  </appender>


  <appender name="WARN_LOG" class="ch.qos.logback.core.rolling.RollingFileAppender">

    <file>${LOGS_ABSOLUTE_PATH}/warn.log</file>
    <filter class="ch.qos.logback.classic.filter.LevelFilter">
      <level>WARN</level>
      <onMatch>ACCEPT</onMatch>
      <onMismatch>DENY</onMismatch>
    </filter>
    <encoder>
      <pattern>[%d{yyyy-MM-dd HH:mm:ss}:%-3relative][%thread] %-5level %logger{35} - %msg%n</pattern>
    </encoder>
    <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
      <fileNamePattern>${LOGS_ABSOLUTE_PATH}/old-logs/warn.%d{yyyy-MM-dd}.%i.log.gz</fileNamePattern>
      <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
        <maxFileSize>100MB</maxFileSize>
      </timeBasedFileNamingAndTriggeringPolicy>
      <maxHistory>180</maxHistory>
    </rollingPolicy>
  </appender>


  <appender name="ERROR_LOG" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <file>${LOGS_ABSOLUTE_PATH}/error.log</file>
    <filter class="ch.qos.logback.classic.filter.LevelFilter">
      <level>ERROR</level>
      <onMatch>ACCEPT</onMatch>
      <onMismatch>DENY</onMismatch>
    </filter>
    <encoder>
      <pattern>[%d{yyyy-MM-dd HH:mm:ss}:%-3relative][%thread] %-5level %logger{35} - %msg%n</pattern>
    </encoder>
    <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
      <fileNamePattern>${LOGS_ABSOLUTE_PATH}/old-logs/error.%d{yyyy-MM-dd}.%i.log.gz</fileNamePattern>
      <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
        <maxFileSize>100MB</maxFileSize>
      </timeBasedFileNamingAndTriggeringPolicy>
      <maxHistory>180</maxHistory>
    </rollingPolicy>
  </appender>


  <root level="INFO">
    <appender-ref ref="STDOUT"/>
  </root>

  <logger name="ControllerExceptionHandler" additivity="false">
    <level value="DEBUG"/>
    <appender-ref ref="INFO_LOG"/>
    <appender-ref ref="WARN_LOG"/>
    <appender-ref ref="ERROR_LOG"/>
  </logger>

  <logger name="org.hibernate.SQL" additivity="false">
    <level value="DEBUG"/>
    <appender-ref ref="INFO_LOG"/>
  </logger>


</configuration>
